/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'com.diffplug.spotless' version "7.0.2"
}
spotless {
    format("yaml"){
        target("**.*.yaml", "**/*.yaml")
        prettier().configFile(".prettierrc")
    }

    java {
        removeUnusedImports()
        googleJavaFormat()
        importOrder('java|javax', 'jakarta', 'lobbok', "", 'org.springframework', '\\#'
        ,"studio.thinkground","\\#studio.thinkground")
        indentWithTabs(2)
        indentWithSpaces(2)
        trimTrailingWhitespace()
        endWithNewline()
    }
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    api libs.org.springframework.boot.spring.boot.starter.web
    api libs.org.springframework.boot.spring.boot.starter.data.jpa
    api libs.org.springframework.spring.context
    api libs.org.springframework.spring.framework.bom
    api libs.org.mariadb.jdbc.mariadb.java.client
    api libs.org.springframework.boot.spring.boot.starter.validation
    api libs.javax.validation.validation.api
    api libs.org.springdoc.springdoc.openapi.starter.webmvc.ui
    api libs.com.github.ulisesbocchio.jasypt.spring.boot.starter
    api libs.org.springframework.boot.spring.boot.starter.data.redis
    api libs.org.springframework.boot.spring.boot.devtools
    implementation group: 'org.springframework', name: 'spring-webflux', version: '6.2.3'
    implementation group: 'io.projectreactor.netty', name: 'reactor-netty-http', version: '1.2.3'
    testImplementation libs.org.springframework.boot.spring.boot.starter.test
    testImplementation libs.org.junit.jupiter.junit.jupiter
    testImplementation libs.org.junit.jupiter.junit.jupiter.engine
    testImplementation libs.org.hamcrest.hamcrest
    compileOnly libs.org.projectlombok.lombok
}

group = 'studio.thinkground'
version = '0.0.1-SNAPSHOT'
description = 'springboot'
java.sourceCompatibility = JavaVersion.VERSION_17

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}

/*tasks.("test") {
    useJUnistPlatform()
    systemProperties("spring.profiles.active")
}*/
